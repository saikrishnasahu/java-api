The ? (question mark) symbol represents the wildcard element.
It means any type. If we write <? extends Number>, it means any child class of Number, e.g., Integer, Float, and double.
Now we can call the method of Number class through any child class object.
We can use a wildcard as a type of a parameter, field, return type, or local variable.
However, it is not allowed to use a wildcard as a type argument for a generic method invocation, a generic class instance creation, or a supertype.

Upper Bounded Wildcards
The purpose of upper bounded wildcards is to decrease the restrictions on a variable.
It restricts the unknown type to be a specific type or a subtype of that type.
It is used by declaring wildcard character ("?") followed by the extends (in case of, class) or implements (in case of, interface) keyword,
followed by its upper bound.

Unbounded Wildcards
The unbounded wildcard type represents the list of an unknown type such as List<?>.
This approach can be useful in the following scenarios: -
When the given method is implemented by using the functionality provided in the Object class.
When the generic class contains the methods that don't depend on the type parameter.

Lower Bounded Wildcards
The purpose of lower bounded wildcards is to restrict the unknown type to be a specific type or a supertype of that type.
It is used by declaring wildcard character ("?") followed by the super keyword, followed by its lower bound.